
// --------------------------------------------------------------------------
/*! \file matrixsolve.cg
* \brief Fragment Shader Code
*
* GpuUrban Library Code:
*/

//----------------------------------------------------------------------
//
// Date: Feb 01, 2006. UNC. (c) Sudipta N. Sinha @ Urbanscape
//
// Work: GpuUrban Library Src Code
//
// Copyright Notice:
//
//   This code and attached libraries cannot be modified, reproduced or copied in any 
//   form without the expressed consent of Dept. of Computer Science, UNC Chapel Hill.
// 
//   Copyright Dept. of Computer Science, UNC Chapel Hill.
//   All rights reserved.
//
//----------------------------------------------------------------------

fragout main(vf30 IN,
			 uniform sampler2D texture,
			  uniform float xoff_1,
			  uniform float yoff_1)
{
  fragout OUT;
  float   gxx, gxy, gyy, ex, ey, det, factor1, factor2;
  float4  term1   = tex2D(texture, IN.TEX0.xy);
  float4  term2   = tex2D(texture, IN.TEX1.xy);
  float2  delpos, newpos; 
  
  float4  featPos = tex2D(texture,IN.TEX2.xy);

  gxx	    = term1.x; 
  gxy	    = term1.y;
  gyy	    = term1.z;
  det	    = term1.w;
  delpos    = float2(0.0,0.0);

  if (det > 0.00001)
  {
    ex	    = term2.x;
    ey	    = term2.y;

    factor1 = ( gyy*ex - gxy*ey ) ;
    factor2 = ( gxx*ey - gxy*ex ) ;
    delpos  = (float2(xoff_1, yoff_1) * float2(factor1, factor2)) / det ; 
  }
  
  OUT.col = float4( featPos.xy, featPos.zw - delpos );

  return OUT;
}
