
// --------------------------------------------------------------------------
/*! \file matrixsolve_f.cg
* \brief Fragment Shader Code
*
* GpuUrban Library Code:
*/

//----------------------------------------------------------------------
//
// Date: Feb 01, 2006. UNC. (c) Sudipta N. Sinha @ Urbanscape
//
// Work: GpuUrban Library Src Code
//
// Copyright Notice:
//
//   This code and attached libraries cannot be modified, reproduced or copied in any 
//   form without the expressed consent of Dept. of Computer Science, UNC Chapel Hill.
// 
//   Copyright Dept. of Computer Science, UNC Chapel Hill.
//   All rights reserved.
//
//----------------------------------------------------------------------

fragout main(vf30 IN,
			 uniform samplerRECT texture,
			  uniform float xoff_2,
			  uniform float yoff_2)
{
  fragout OUT;
  float   gxx, gxy, gyy, ex, ey, res, delta_res, det, factor1, factor2;
  float4  term1   = f4texRECT(texture, IN.TEX0.xy);
  float4  term2   = f4texRECT(texture, IN.TEX1.xy);
  float2  delpos, newpos; 
  float4  colour;

  float4  featPos = f4texRECT(texture,IN.TEX2.xy);

  gxx	    = term1.x; 
  gxy	    = term1.y;
  gyy	    = term1.z;
  det	    = term1.w;
  delpos    = float2(0.0,0.0);

  if (det > 0.00001)
  {
     ex	    = term2.x;
     ey	    = term2.y;
  	 res     = term2.z;

     factor1 = ( gyy*ex - gxy*ey ) ;
     factor2 = ( gxx*ey - gxy*ex ) ;
     delpos  = (float2(xoff_2, yoff_2) * float2(factor1, factor2)) / det ; 
	 delta_res = length(delpos);	
	 OUT.col = float4(delta_res,res, featPos.zw - delpos);
  }
  else
  {
	 OUT.col = float4( 1.0,1.0,-1.0, -1.0 );
  }
  return OUT;

}
