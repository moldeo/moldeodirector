
// --------------------------------------------------------------------------
/*! \file corner2b.cg
* \brief Fragment Shader Code
*
* GpuUrban Library Code:
*/

//----------------------------------------------------------------------
//
// Date: Feb 01, 2006. UNC. (c) Sudipta N. Sinha @ Urbanscape
//
// Work: GpuUrban Library Src Code
//
// Copyright Notice:
//
//   This code and attached libraries cannot be modified, reproduced or copied in any 
//   form without the expressed consent of Dept. of Computer Science, UNC Chapel Hill.
// 
//   Copyright Dept. of Computer Science, UNC Chapel Hill.
//   All rights reserved.
//
//----------------------------------------------------------------------


fragout main(vf30 IN,
			 uniform float eigen_thresh,
			 uniform samplerRECT texture)
{
  fragout OUT;
  float   minEigen;
  float4 vec1,vec2,vec3,vec4,vec5,vec6,vec7, Sum;


  vec1  = f4texRECT(texture, IN.TEX0.xy);
  vec2  = f4texRECT(texture, IN.TEX1.xy);     
  vec3  = f4texRECT(texture, IN.TEX2.xy);     
  vec4  = f4texRECT(texture, IN.TEX3.xy);     
  vec5  = f4texRECT(texture, IN.TEX4.xy);     
  vec6  = f4texRECT(texture, IN.TEX5.xy);     
  vec7  = f4texRECT(texture, IN.TEX6.xy);     

  Sum   = (vec1 + vec2 + vec3 + vec4 + vec5 + vec6 + vec7);
  
  minEigen = (Sum.x + Sum.z - sqrt( (Sum.x - Sum.z)*(Sum.x - Sum.z) + 4*Sum.y*Sum.y) )/2.0;
  float outvalue = saturate(minEigen - eigen_thresh);

  OUT.col  = float4(outvalue, outvalue, outvalue,1.0);
  OUT.depth = 0.5;
  return OUT;
}
